// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  name             String
  role             Role              @default(user)
  email            String            @unique
  password         String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  adoptionRequests AdoptionRequest[]

  @@map("users")
}

enum Role {
  admin
  user
}

model Pet {
  id                   String            @id @default(uuid())
  name                 String
  species              String
  bannerPhoto          String
  multiplePhotos       String[]
  breed                String
  age                  Int
  specialNeeds         String
  size                 petSize
  gender               Gender
  location             String
  healthStatus         String
  description          String
  temperament          String
  medicalHistory       String
  adoptionRequirements String
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  adoptionRequests     AdoptionRequest[]

  @@map("pets")
}

enum petSize {
  small
  medium
  large
}

enum Gender {
  male
  female
  other
}

model AdoptionRequest {
  id                     String                @id @default(uuid())
  status                 adoptionRequestStatus @default(PENDING)
  petOwnershipExperience String?
  address           String  
  phoneNumber String  
  message String   
  createdAt              DateTime              @default(now())
  updatedAt              DateTime              @updatedAt
  user                   User                  @relation(fields: [userId], references: [id])
  userId                 String
  pet                    Pet                   @relation(fields: [petId], references: [id])
  petId                  String

  @@map("adoption-requests")
}

enum adoptionRequestStatus {
  PENDING
  APPROVED
  REJECTED
}
